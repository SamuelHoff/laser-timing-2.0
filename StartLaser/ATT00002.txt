


/***************************************************
  This is a library for the Si1145 UV/IR/Visible Light Sensor

  Designed specifically to work with the Si1145 sensor in the
  adafruit shop
  ----> https://www.adafruit.com/products/1777

  These sensors use I2C to communicate, 2 pins are required to
  interface
  Adafruit invests time and resources providing this open source code,
  please support Adafruit and open-source hardware by purchasing
  products from Adafruit!

  Written by Limor Fried/Ladyada for Adafruit Industries.
  BSD license, all text above must be included in any redistribution
 ****************************************************/

#include <Wire.h>
#include "Adafruit_SI1145.h"

// IR Sensors
Adafruit_SI1145 uv = Adafruit_SI1145();

// Constants
const int laser = 10;
const int button = 8;
const int RedLED = 13;
const int GreenLED = 12;
const int MidRecieve = 5;
const int EndRecieve = 6;

// Timing
unsigned long previousTime = 0;
unsigned long currentTime = 0;
const int deltaTime = 500;
int StartTime = 0;
int MidTime = 0;
int EndTime = 0;
bool ReadyToStart = true;
bool ReadyToEnd = false;
int TimeElapsed = 0;

// Light
int visLight = 0;
int IRlight = 0;

// button
int buttonState1 = LOW;
int buttonState2 = LOW;
int oldButtonState = HIGH;


void setup() {
  Serial.begin(9600);

  Serial.println("Adafruit SI1145 test");
  
  // Set pins
  pinMode(laser, OUTPUT);
  pinMode(button, INPUT_PULLUP);
  pinMode(RedLED, OUTPUT);
  pinMode(GreenLED, OUTPUT);

  // IR Sensor stuff
  if (! uv.begin()) {
    Serial.println("Didn't find Si1145");
    while (1);
  }

  // Initial values
  Serial.println("OK!");
  digitalWrite(laser, HIGH);
  digitalWrite(GreenLED, HIGH); // Green means everythings ready to go

}

void loop() {
  // deltaTime technique
  previousTime = millis();

  // button
  //buttonState1 = digitalRead(button);
  
  // Read the light
  visLight = uv.readVisible();
  IRlight = uv.readIR();
  
  /* 
  //UV Sensor Serial Output
  Serial.println("===================");
  Serial.print("Vis: "); Serial.println(visLight);
  Serial.print("IR: "); Serial.println(IRlight);
  */

  if ( ReadyToStart) {             // if we are ready to start a new run
    if ( visLight > 500) {          // if the light is broken
      StartTime = micros();        // Start the timer
      digitalWrite(GreenLED, LOW); // turn the green light off
      digitalWrite(RedLED, HIGH);  // turn the red light on
      ReadyToStart = false;        // make sure we don't accidentally stop in the middle of a run
      ReadyToEnd = true;           // allows arduino to recieve the data from the ending laser
      Serial.println("Begin");
      Serial.println(visLight);
    }
  }

  if ( ReadyToEnd) {                        // if a run is in progress
    if ( visLight < 500) {                   // if the end laser is broken [Code: (digitalRead(EndRecieve) == HIGH)]
      EndTime = micros();                   // Record the end time
      digitalWrite(RedLED, LOW);            // turn the red light off
      digitalWrite(GreenLED, HIGH);         // turn the green light on
      ReadyToStart = false;                 // make sure we don't accidentally start another run
      ReadyToEnd = false;                   // make sure we don't accidentally get new the data from the ending laser
      TimeElapsed = (EndTime - StartTime);  // calculate end time
      Serial.println(TimeElapsed);          // print end time
    }
  }

  // Uncomment if you have an IR LED attached to LED pin!
  //Serial.print("Prox: "); Serial.println(uv.readProx());

  // We do not care about the Uindex at this point
  //  float UVindex = uv.readUV();
  //  // the index is multiplied by 100 so to get the
  //  // integer index, divide by 100!
  //  UVindex /= 100.0;
  //  Serial.print("UV: ");  Serial.println(UVindex);
  //  Serial.println(i);

  // DeltaTime technique
  currentTime = millis();
  while (currentTime - previousTime < deltaTime) {
    currentTime = millis();
  }
  
  // button
  buttonState2 = digitalRead(button);

  // Restart button
  if ( buttonState1 == buttonState2 && buttonState1 != oldButtonState) {
    ReadyToStart = true;
    digitalWrite(RedLED, LOW);
    digitalWrite(GreenLED, HIGH);
  }

  oldButtonState = buttonState2; // update the old button state

  
}

